'''
Created on Oct 6, 2014

@author: jeburks
'''
import urllib
import re
import os.path as path
import gzip
import os
import sys
import zipfile
import CHIRPS.utils.configuration.parameters as params

roothttp ='http://earlywarning.usgs.gov/ftp2/eMODIS/west/'
rootoutputdir = params.dataTypes[1]['inputDataLocation']

def removeTFWfiles(directory):
    for filename in os.listdir(directory):
        if filename.endswith(".tfw") or filename.endswith(".zip"): 
            #print "Removing "+directory+filename
            os.remove(directory+filename)
    
def getFileForYearAndMonth(yearToGet,monthToGet):
    '''
    
    :param yearToGet:
    :param monthToGet:
    '''
    print "-------------------------------Working on ",monthToGet,"/",yearToGet,"------------------------------------"
    filenum = "{:0>2d}{:0>2d}".format(year-2000,monthToGet)
    url = roothttp+"west"+filenum+'.zip'
    enddirectory =  rootoutputdir+str(year)+"/"
    endfilename = enddirectory+"west"+filenum+'.zip'
    urllib.urlretrieve (url, endfilename)
    with zipfile.ZipFile(endfilename, "r") as z:
        z.extractall(enddirectory)
    removeTFWfiles(enddirectory)
    print "EndFile ",endfilename
   
    print "-----------------------------Done working on ",monthToGet,"/",yearToGet,"---------------------------------"


def createEndDirectory(year):
    '''
    
    :param year:
    '''
    fullPath = rootoutputdir+str(year)
    if os.path.exists(fullPath) == False:
        print "Need to create "+fullPath
        os.makedirs(fullPath)
    else:
        print "Directory already exists "+fullPath
        


if __name__ == '__main__':
    print "Starting Downloading eMODIS Data for West Africa"

    print "TODO! FIX FILE NAME ISSUE WITH EMODIS (USGS reversed the numbers for year and itemNumber in the tif file names.  ONCE THIS HAS BEEN MITIGATED, REMOVE THIS MESSAGE!"
    
    args = len(sys.argv)
    if (args < 3):
        print "Usage: Startyear endyear"
        sys.exit()
    else :
        print "Working on years ",sys.argv[1],"-",sys.argv[2]
        #####Go get range of years
        years = range(int(sys.argv[1]),int(sys.argv[2])+1)
        print years
        for year in years:
            createEndDirectory(year)
            for month in range(1,13):
                print "Processing Month:",month," Year ",year
                getFileForYearAndMonth(year,month)
        print "Done"





